//
//  SwipayViewModel.swift
//  SWIPO-iOS
//
//  Created by wodnd on 11/18/24.
//

import Foundation

class SwipayViewModel: ObservableObject {
    struct State {
        var getSwipayResponse: SwipayModel = SwipayModel(userName: "", balance: 0, totalCards: 0, cards: [cardInfo(cardId: "0", region: "", point: 0, customImage: "")], paylistInfos: [paylistInfo(paylistId: "", amount: 0, storeName: "", createAt: "")])
        
        //ÏµúÍ∑º Ïù¥Ïö©ÎÇ¥Ïó≠
        var getRecentUsageResponse: [RecentUsageModel] = [RecentUsageModel(id: 1, region: "ulsan", title: "ÎßõÏ∞¨Îì§ÏôïÏÜåÍ∏àÍµ¨Ïù¥ Ïö∏ÏÇ∞ Î¨¥Í±∞Ï†ê", date: "11.12 14:17", type: "Í≤∞Ï†ú", price: "10,500"), RecentUsageModel(id: 2, region: "busan", title: "ÎßõÏ∞¨Îì§ÏôïÏÜåÍ∏àÍµ¨Ïù¥ Ïö∏ÏÇ∞ Î¨¥Í±∞Ï†ê", date: "11.12 14:17", type: "Í≤∞Ï†ú", price: "10,500"), RecentUsageModel(id: 3, region: "seoul", title: "ÎßõÏ∞¨Îì§ÏôïÏÜåÍ∏àÍµ¨Ïù¥ Ïö∏ÏÇ∞ Î¨¥Í±∞Ï†ê", date: "11.12 14:17", type: "Í≤∞Ï†ú", price: "10,500"), RecentUsageModel(id: 4, region: "daegu", title: "ÎßõÏ∞¨Îì§ÏôïÏÜåÍ∏àÍµ¨Ïù¥ Ïö∏ÏÇ∞ Î¨¥Í±∞Ï†ê", date: "11.12 14:17", type: "Í≤∞Ï†ú", price: "10,500"), RecentUsageModel(id: 5, region: "daejeon", title: "ÎßõÏ∞¨Îì§ÏôïÏÜåÍ∏àÍµ¨Ïù¥ Ïö∏ÏÇ∞ Î¨¥Í±∞Ï†ê", date: "11.12 14:17", type: "Í≤∞Ï†ú", price: "10,500"), RecentUsageModel(id: 6, region: "jeju", title: "ÎßõÏ∞¨Îì§ÏôïÏÜåÍ∏àÍµ¨Ïù¥ Ïö∏ÏÇ∞ Î¨¥Í±∞Ï†ê", date: "11.12 14:17", type: "Í≤∞Ï†ú", price: "10,500")]
        
        //Ïä§ÏúÑÌè¨Ïù∏Ìä∏ Ïπ¥Îìú
        var getSwipointCardResponse: [cardInfo] = []
        
        //Ïä§ÏúÑÌéòÏù¥ Îâ¥Ïä§
        var getSwipayNewsResponse: [SwipayNewsModel] = [SwipayNewsModel(id: 1, title: "ÏßÄÏó≠ ÌôîÌèêÏùò ÏÉàÎ°úÏö¥ Ìå®Îü¨Îã§ÏûÑ! üéâ\nÏä§ÏúÑÌè¨Ïùò ÌÉÑÏÉùÎ∞∞Í≤Ω ÏïåÍ≥† Í≥ÑÏÖ®ÎÇòÏöî?", content: "ÏßÄÏó≠ÌôîÌèêÏùò Ìö®Í≥ºÎäî 'Ïó≠Ïô∏ ÏÜåÎπÑÏßÄÏ∂ú Ï∞®Îã®'ÏúºÎ°ú, Ï¶â Ïì∏ Ïàò ÏûàÎäî ÏßÄÏó≠ ÏïàÏóêÏÑúÎßå ÏÜåÎπÑÎ•º ÎäòÎ¶¨Îäî Îç∞ ÏûàÏäµÎãàÎã§. ÎåÄÎ∂ÄÎ∂ÑÏùò ÏßÄÏûêÏ≤¥Í∞Ä ÏßÄÏó≠ÌôîÌèêÎ•º Î∞úÌñâÌïú ÏßÄÍ∏à, ÏßÄÏó≠Í≤ΩÏ†ú ÌôúÏÑ±Ìôî Ìö®Í≥ºÍ∞Ä Î¨¥ÏùòÎØ∏ ÌïòÎã§Îäî ÏÇ¨Ïã§ ÏïåÍ≥† Í≥ÑÏÖ®ÎÇòÏöî?"), SwipayNewsModel(id: 2, title: "ÏßÄÏó≠ ÌôîÌèêÏùò ÏÉàÎ°úÏö¥ Ìå®Îü¨Îã§ÏûÑ! üéâ\nÏä§ÏúÑÌè¨Ïùò ÌÉÑÏÉùÎ∞∞Í≤Ω ÏïåÍ≥† Í≥ÑÏÖ®ÎÇòÏöî?", content: "ÏßÄÏó≠ÌôîÌèêÏùò Ìö®Í≥ºÎäî 'Ïó≠Ïô∏ ÏÜåÎπÑÏßÄÏ∂ú Ï∞®Îã®'ÏúºÎ°ú, Ï¶â Ïì∏ Ïàò ÏûàÎäî ÏßÄÏó≠ ÏïàÏóêÏÑúÎßå ÏÜåÎπÑÎ•º ÎäòÎ¶¨Îäî Îç∞ ÏûàÏäµÎãàÎã§. ÎåÄÎ∂ÄÎ∂ÑÏùò ÏßÄÏûêÏ≤¥Í∞Ä ÏßÄÏó≠ÌôîÌèêÎ•º Î∞úÌñâÌïú ÏßÄÍ∏à, ÏßÄÏó≠Í≤ΩÏ†ú ÌôúÏÑ±Ìôî Ìö®Í≥ºÍ∞Ä Î¨¥ÏùòÎØ∏ ÌïòÎã§Îäî ÏÇ¨Ïã§ ÏïåÍ≥† Í≥ÑÏÖ®ÎÇòÏöî?"), SwipayNewsModel(id: 3, title: "ÏßÄÏó≠ ÌôîÌèêÏùò ÏÉàÎ°úÏö¥ Ìå®Îü¨Îã§ÏûÑ! üéâ\nÏä§ÏúÑÌè¨Ïùò ÌÉÑÏÉùÎ∞∞Í≤Ω ÏïåÍ≥† Í≥ÑÏÖ®ÎÇòÏöî?", content: "ÏßÄÏó≠ÌôîÌèêÏùò Ìö®Í≥ºÎäî 'Ïó≠Ïô∏ ÏÜåÎπÑÏßÄÏ∂ú Ï∞®Îã®'ÏúºÎ°ú, Ï¶â Ïì∏ Ïàò ÏûàÎäî ÏßÄÏó≠ ÏïàÏóêÏÑúÎßå ÏÜåÎπÑÎ•º ÎäòÎ¶¨Îäî Îç∞ ÏûàÏäµÎãàÎã§. ÎåÄÎ∂ÄÎ∂ÑÏùò ÏßÄÏûêÏ≤¥Í∞Ä ÏßÄÏó≠ÌôîÌèêÎ•º Î∞úÌñâÌïú ÏßÄÍ∏à, ÏßÄÏó≠Í≤ΩÏ†ú ÌôúÏÑ±Ìôî Ìö®Í≥ºÍ∞Ä Î¨¥ÏùòÎØ∏ ÌïòÎã§Îäî ÏÇ¨Ïã§ ÏïåÍ≥† Í≥ÑÏÖ®ÎÇòÏöî?"), SwipayNewsModel(id: 4, title: "ÏßÄÏó≠ ÌôîÌèêÏùò ÏÉàÎ°úÏö¥ Ìå®Îü¨Îã§ÏûÑ! üéâ\nÏä§ÏúÑÌè¨Ïùò ÌÉÑÏÉùÎ∞∞Í≤Ω ÏïåÍ≥† Í≥ÑÏÖ®ÎÇòÏöî?", content: "ÏßÄÏó≠ÌôîÌèêÏùò Ìö®Í≥ºÎäî 'Ïó≠Ïô∏ ÏÜåÎπÑÏßÄÏ∂ú Ï∞®Îã®'ÏúºÎ°ú, Ï¶â Ïì∏ Ïàò ÏûàÎäî ÏßÄÏó≠ ÏïàÏóêÏÑúÎßå ÏÜåÎπÑÎ•º ÎäòÎ¶¨Îäî Îç∞ ÏûàÏäµÎãàÎã§. ÎåÄÎ∂ÄÎ∂ÑÏùò ÏßÄÏûêÏ≤¥Í∞Ä ÏßÄÏó≠ÌôîÌèêÎ•º Î∞úÌñâÌïú ÏßÄÍ∏à, ÏßÄÏó≠Í≤ΩÏ†ú ÌôúÏÑ±Ìôî Ìö®Í≥ºÍ∞Ä Î¨¥ÏùòÎØ∏ ÌïòÎã§Îäî ÏÇ¨Ïã§ ÏïåÍ≥† Í≥ÑÏÖ®ÎÇòÏöî?"), SwipayNewsModel(id: 5, title: "ÏßÄÏó≠ ÌôîÌèêÏùò ÏÉàÎ°úÏö¥ Ìå®Îü¨Îã§ÏûÑ! üéâ\nÏä§ÏúÑÌè¨Ïùò ÌÉÑÏÉùÎ∞∞Í≤Ω ÏïåÍ≥† Í≥ÑÏÖ®ÎÇòÏöî?", content: "ÏßÄÏó≠ÌôîÌèêÏùò Ìö®Í≥ºÎäî 'Ïó≠Ïô∏ ÏÜåÎπÑÏßÄÏ∂ú Ï∞®Îã®'ÏúºÎ°ú, Ï¶â Ïì∏ Ïàò ÏûàÎäî ÏßÄÏó≠ ÏïàÏóêÏÑúÎßå ÏÜåÎπÑÎ•º ÎäòÎ¶¨Îäî Îç∞ ÏûàÏäµÎãàÎã§. ÎåÄÎ∂ÄÎ∂ÑÏùò ÏßÄÏûêÏ≤¥Í∞Ä ÏßÄÏó≠ÌôîÌèêÎ•º Î∞úÌñâÌïú ÏßÄÍ∏à, ÏßÄÏó≠Í≤ΩÏ†ú ÌôúÏÑ±Ìôî Ìö®Í≥ºÍ∞Ä Î¨¥ÏùòÎØ∏ ÌïòÎã§Îäî ÏÇ¨Ïã§ ÏïåÍ≥† Í≥ÑÏÖ®ÎÇòÏöî?"), SwipayNewsModel(id: 6, title: "ÏßÄÏó≠ ÌôîÌèêÏùò ÏÉàÎ°úÏö¥ Ìå®Îü¨Îã§ÏûÑ! üéâ\nÏä§ÏúÑÌè¨Ïùò ÌÉÑÏÉùÎ∞∞Í≤Ω ÏïåÍ≥† Í≥ÑÏÖ®ÎÇòÏöî?", content: "ÏßÄÏó≠ÌôîÌèêÏùò Ìö®Í≥ºÎäî 'Ïó≠Ïô∏ ÏÜåÎπÑÏßÄÏ∂ú Ï∞®Îã®'ÏúºÎ°ú, Ï¶â Ïì∏ Ïàò ÏûàÎäî ÏßÄÏó≠ ÏïàÏóêÏÑúÎßå ÏÜåÎπÑÎ•º ÎäòÎ¶¨Îäî Îç∞ ÏûàÏäµÎãàÎã§. ÎåÄÎ∂ÄÎ∂ÑÏùò ÏßÄÏûêÏ≤¥Í∞Ä ÏßÄÏó≠ÌôîÌèêÎ•º Î∞úÌñâÌïú ÏßÄÍ∏à, ÏßÄÏó≠Í≤ΩÏ†ú ÌôúÏÑ±Ìôî Ìö®Í≥ºÍ∞Ä Î¨¥ÏùòÎØ∏ ÌïòÎã§Îäî ÏÇ¨Ïã§ ÏïåÍ≥† Í≥ÑÏÖ®ÎÇòÏöî?")]
        
        // Ïä§ÏúÑÌè¨Ïù∏Ìä∏ ÌôòÏ†Ñ ÏÉòÌîå Îç∞Ïù¥ÌÑ∞
        var sampleSwipointExchange: [SwipayPointModel] = [SwipayPointModel(id: 1, region: "Î∂ÄÏÇ∞", cardImage: "", point: 2124),
                                                          SwipayPointModel(id: 2, region: "ÏÑúÏö∏", cardImage: "", point: 12124)]
    }
    
    enum Action {
        case getSwipay
    }
    
    @Published var state: State
    
    init(
        state: State = .init()
    ) {
        self.state = state
    }
    
    func action(_ action: Action) async {
        switch action {
        case let .getSwipay:
            if let response = await SwipayService.getSwipay() {
                print(response)
                await MainActor.run {
                    print("\(response.code)")
                    
                    if let reponseData = response.data {
                        state.getSwipayResponse = reponseData
                        state.getSwipointCardResponse = reponseData.cards
                    } else {
                        print("Error")
                    }
                }
            } else {
                print("Error")
            }
        }
        
    }
}

extension SwipayViewModel {
    // Ï†ïÏãù ÏßÄÏó≠ Î™ÖÏπ≠ÏùÑ Ï§ÑÏù∏ Ïù¥Î¶ÑÏúºÎ°ú Î≥ÄÌôòÌïòÎäî Ìï®Ïàò
    func convertFullRegionToShort(inputRegion: String) -> String? {
        let fullToShortRegionMapping: [String: String] = [
            "ÏÑúÏö∏ÌäπÎ≥ÑÏãú": "ÏÑúÏö∏",
            "Í≤ΩÏÉÅÎÇ®ÎèÑ": "Í≤ΩÎÇ®",
            "Í≤ΩÍ∏∞ÎèÑ": "Í≤ΩÍ∏∞",
            "Ïù∏Ï≤úÍ¥ëÏó≠Ïãú": "Ïù∏Ï≤ú",
            "Í∞ïÏõêÌäπÎ≥ÑÏûêÏπòÎèÑ": "Í∞ïÏõê",
            "Ï∂©Ï≤≠ÎÇ®ÎèÑ": "Ï∂©ÎÇ®",
            "ÎåÄÏ†ÑÍ¥ëÏó≠Ïãú": "ÎåÄÏ†Ñ",
            "Ï∂©Ï≤≠Î∂ÅÎèÑ": "Ï∂©Î∂Å",
            "ÏÑ∏Ï¢ÖÌäπÎ≥ÑÏûêÏπòÏãú": "ÏÑ∏Ï¢Ö",
            "Î∂ÄÏÇ∞Í¥ëÏó≠Ïãú": "Î∂ÄÏÇ∞",
            "Ïö∏ÏÇ∞Í¥ëÏó≠Ïãú": "Ïö∏ÏÇ∞",
            "ÎåÄÍµ¨Í¥ëÏó≠Ïãú": "ÎåÄÍµ¨",
            "Í≤ΩÏÉÅÎ∂ÅÎèÑ": "Í≤ΩÎ∂Å",
            "Ï†ÑÎùºÎÇ®ÎèÑ": "Ï†ÑÎÇ®",
            "Í¥ëÏ£ºÍ¥ëÏó≠Ïãú": "Í¥ëÏ£º",
            "Ï†ÑÎùºÎ∂ÅÎèÑ": "Ï†ÑÎ∂Å",
            "Ï†úÏ£ºÌäπÎ≥ÑÏûêÏπòÎèÑ": "Ï†úÏ£º"
        ]
        return fullToShortRegionMapping[inputRegion]
    }

    // ÎèÑÎ°úÎ™Ö Ï£ºÏÜåÏôÄ Ïä§ÏúïÏä§ÌÜ§ÏóêÏÑú Ï∂úÎ†•ÌïòÎäî ÏßÄÏó≠ÏúºÎ°ú Ï†ÑÌôò ÌõÑ Í∏∞Ï°¥ Ïπ¥ÎìúÏóê Ï°¥Ïû¨ÌïòÎäîÏßÄ ÎπÑÍµêÌïòÎäî Ìï®Ïàò
    func isRegionAvailable(inputRegion: String) -> Bool {
        guard let shortRegion = convertFullRegionToShort(inputRegion: inputRegion) else {
            return true // Îß§ÌïëÏóê ÏóÜÎäî ÏßÄÏó≠Ïù¥ÎùºÎ©¥ ÏÇ¨Ïö© Í∞ÄÎä•(true)ÏúºÎ°ú Í∞ÑÏ£º
        }

        // Ïπ¥Îìú Î¶¨Ïä§Ìä∏Ïóê Ï§ÑÏù∏ ÏßÄÏó≠ Ïù¥Î¶ÑÏù¥ Ï°¥Ïû¨ÌïòÎäîÏßÄ ÌôïÏù∏
        let isCardExists = state.getSwipointCardResponse.contains(where: { $0.region == shortRegion })
        return !isCardExists // Ïπ¥ÎìúÍ∞Ä Ï°¥Ïû¨ÌïòÏßÄ ÏïäÏúºÎ©¥ true, Ï°¥Ïû¨ÌïòÎ©¥ false Î∞òÌôò
    }
    
    // ÏßÄÏó≠ Ïù¥Î¶ÑÏùÑ ÏòÅÏñ¥Î°ú ÏπòÌôò (Ïù¥ÎØ∏ÏßÄ ÏÇ¨Ïö©ÏùÑ ÏúÑÌï®)
    func convertRegionToEnglish(koreanRegion: String) -> String? {
        let regionMapping: [String: String] = [
            "ÏÑúÏö∏": "seoul",
            "Í≤ΩÎÇ®": "gyeongnam",
            "Í≤ΩÍ∏∞": "gyeonggi",
            "Ïù∏Ï≤ú": "incheon",
            "Í∞ïÏõê": "gangwon",
            "Ï∂©ÎÇ®": "chungcheongnam",
            "ÎåÄÏ†Ñ": "daejeon",
            "Ï∂©Î∂Å": "chungcheongbuk",
            "ÏÑ∏Ï¢Ö": "sejong",
            "Î∂ÄÏÇ∞": "busan",
            "Ïö∏ÏÇ∞": "ulsan",
            "ÎåÄÍµ¨": "daegu",
            "Í≤ΩÎ∂Å": "gyeongsangbuk",
            "Ï†ÑÎÇ®": "jeollanam",
            "Í¥ëÏ£º": "gwanju",
            "Ï†ÑÎ∂Å": "jeollabuk",
            "Ï†úÏ£º": "jeju"
        ]
        return regionMapping[koreanRegion]
    }
}
